name: Smart Contract CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  DOCKER_IMAGE: your-dockerhub-username/smart-contract-service
  DOCKER_TAG: ${{ github.sha }}

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        
    - name: Install dependencies
      run: npm install
        
    - name: Run unit tests
      run: npm test
      
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
        
    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        tags: |
          ${{ env.DOCKER_IMAGE }}:latest
          ${{ env.DOCKER_IMAGE }}:${{ env.DOCKER_TAG }}
          
    - name: Deploy with Docker Compose
      run: |
        # Create docker-compose.yml if it doesn't exist
        echo "
        version: '3.8'
        services:
          smart-contract:
            image: ${{ env.DOCKER_IMAGE }}:${{ env.DOCKER_TAG }}
            ports:
              - '8545:8545'
            environment:
              - NODE_ENV=production
          ganache:
            image: trufflesuite/ganache:latest
            ports:
              - '8546:8545'
        " > docker-compose.yml
        
        # Start the services
        docker-compose up -d
        
        # Wait for services to be ready
        sleep 30
        
    - name: Run integration tests
      run: |
        # Install test dependencies if needed
        npm install -g truffle
        
        # Run integration tests against the deployed service
        npm run test:integration
        
    - name: Cleanup
      run: docker-compose down
